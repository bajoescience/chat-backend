{"version":3,"file":"static/js/400.3f61ea27.chunk.js","mappings":"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","sources":["components/Button.js","components/Form.js","components/FormText.js","services/login.js","helper/helper.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/icons-material/esm/Visibility.js","routes/SignUp.js","../node_modules/@mui/icons-material/Email.js","../node_modules/@mui/icons-material/MoreHoriz.js"],"sourcesContent":["import { Button as MuiButton } from  '@mui/material'\r\nimport {styled} from '@mui/material'\r\n\r\n\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <>\r\n            <MuiButton\r\n            type={props.type}\r\n            fullWidth={props.fullWidth ? true: null}\r\n            variant={props.variant || 'contained'}\r\n            sx={props.sx || {mt: 2, mb: 3}}\r\n            >\r\n                {props.children}\r\n            </MuiButton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const StyledButton = (props) => {\r\n    const MyButton = styled(MuiButton)(({theme}) => ({\r\n        borderRadius: '30px',\r\n        backgroundColor: 'white',\r\n        color: 'gray',\r\n        '&:hover': {\r\n            backgroundColor: 'white'\r\n        }\r\n    }))\r\n    return (\r\n        <>\r\n            <MyButton\r\n            variant={props.variant}\r\n            href={props.href}\r\n            target={props.target}\r\n            sx={props.sx}\r\n            disableElevation={props.disableElevation}\r\n            >\r\n                {props.children}\r\n            </MyButton>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Button","import { Box } from \"@mui/system\"\r\n\r\nconst Form = (props) => {\r\n\r\n    return (\r\n        <>\r\n         <Box component='form'\r\n          onSubmit={props.onSubmit}\r\n          sx={props.sx || {mt: 1}}\r\n          noValidate={props.noValidate ? true : null}\r\n          >\r\n            {props.children}\r\n         </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form","import { TextField, InputAdornment } from \"@mui/material\"\r\n\r\nconst FormText = (props) => {\r\n    return (\r\n        <>\r\n            <TextField\r\n              margin={props.margin || 'none'}\r\n              variant='standard'\r\n              required\r\n              fullWidth\r\n              helperText={props.helperText}\r\n              color={props.color || 'primary'}\r\n              error={props.error || null}\r\n              id={props.id}\r\n              label={props.label}\r\n              name={props.name || null}\r\n              autoComplete={props.autoComplete}\r\n              type={props.type || 'text'}\r\n              autoFocus={props.autoFocus ? true : null}\r\n              InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment position='start'>\r\n                        {props.children}\r\n                    </InputAdornment>\r\n                ),\r\n                endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                        {props.endAdornment || null}\r\n                    </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormText","import axios from \"axios\";\r\n\r\nconst baseUrl1 = \"https://cha-viuu.onrender.com/messages\";\r\nconst baseUrl = \"/api/login\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst login = async (credentials) => {\r\n  const res = await axios.post(baseUrl, credentials);\r\n  return res.data;\r\n};\r\n\r\nexport default { login };\r\n","import loginService from \"../services/login\";\r\nimport messageService from \"../services/messages\";\r\n\r\n/*\r\nconst flipArray = (array) => {\r\n    const flippedArray = []\r\n    for (let i = 0; i < array.lenth; i++) {\r\n        flippedArray = \r\n    }\r\n}\r\n*/\r\n\r\nexport const login = async (credentials, remember = false) => {\r\n  const userObj = await loginService.login(credentials);\r\n  messageService.setToken(userObj.token);\r\n\r\n  // Save user to localStorage if remember me is set\r\n  if (remember) {\r\n    // Save user object to memory\r\n    localStorage.setItem(\"loggedUser\", JSON.stringify(userObj));\r\n  }\r\n\r\n  return userObj.user;\r\n};\r\n\r\nconst ENVIRONMENT = \"test\";\r\n\r\nconst CONTACTS = [\r\n  {\r\n    contact: {\r\n      username: \"xyz\",\r\n      firstName: \"x\",\r\n      lastName: \"z\",\r\n      email: \"x\",\r\n      id: 2,\r\n    },\r\n    notif: {\r\n      sender: \"xyz\",\r\n      receiver: \"abc\",\r\n      message: \"Hi\",\r\n      count: 1,\r\n      date: \"4: 17\",\r\n      id: 1,\r\n    },\r\n  },\r\n  {\r\n    contact: {\r\n      username: \"yst\",\r\n      firstName: \"y\",\r\n      lastName: \"t\",\r\n      email: \"x\",\r\n      id: 3,\r\n    },\r\n    notif: {\r\n      sender: \"yst\",\r\n      receiver: \"abc\",\r\n      message: \"Hi\",\r\n      count: 0,\r\n      date: \"9:04\",\r\n      id: 2,\r\n    },\r\n  },\r\n];\r\n\r\nconst test = {\r\n  user: {\r\n    username: \"abc\",\r\n    firstName: \"a\",\r\n    lastName: \"c\",\r\n    email: \"a\",\r\n    passwordHash: \"abc\",\r\n    contacts: [2, 3, 4],\r\n    messages: [1, 2, 3, 4],\r\n    //The below is not needed\r\n    /* \r\n           Notification where the current user \r\n           is the receiver \r\n        */\r\n    notif: [\r\n      {\r\n        sender: [2, 3, 4],\r\n        count: Number,\r\n        message: 2,\r\n      },\r\n    ],\r\n    id: 1,\r\n  },\r\n  contacts: [\r\n    {\r\n      username: \"xyz\",\r\n      firstName: \"x\",\r\n      lastName: \"z\",\r\n      email: \"x\",\r\n      passwordHash: \"xyz\",\r\n      contacts: [1, 3, 4],\r\n      messages: [1, 2, 3, 4],\r\n      //The below is not needed\r\n      /* \r\n           Notification where the current user \r\n           is the receiver \r\n        */\r\n      notif: [\r\n        {\r\n          sender: [1, 3, 4],\r\n          count: Number,\r\n          message: 2,\r\n        },\r\n      ],\r\n      id: 2,\r\n    },\r\n    {\r\n      username: \"male\",\r\n      firstName: \"m\",\r\n      lastName: \"e\",\r\n      email: \"m\",\r\n      passwordHash: \"male\",\r\n      contacts: [1, 2, 4],\r\n      messages: [1, 2, 3, 4],\r\n      //The below is not needed\r\n      /* \r\n           Notification where the current user \r\n           is the receiver \r\n        */\r\n      notif: [\r\n        {\r\n          sender: [1, 2, 4],\r\n          count: Number,\r\n          message: 2,\r\n        },\r\n      ],\r\n      id: 3,\r\n    },\r\n    {\r\n      username: \"female\",\r\n      firstName: \"f\",\r\n      lastName: \"e\",\r\n      email: \"f\",\r\n      passwordHash: \"female\",\r\n      contacts: [1, 2, 3],\r\n      messages: [1, 2, 3, 4],\r\n      //The below is not needed\r\n      /* \r\n           Notification where the current user \r\n           is the receiver \r\n        */\r\n      notif: [\r\n        {\r\n          sender: [1, 2, 3],\r\n          count: Number,\r\n          message: 3,\r\n        },\r\n      ],\r\n      id: 4,\r\n    },\r\n  ],\r\n  message: {\r\n    string: \"Yes\",\r\n    files: [],\r\n    sender: 1,\r\n    receiver: 3,\r\n    date: new Date(),\r\n    // Keep track of all message number between the same users\r\n    sortNumber: 1,\r\n  },\r\n};\r\n\r\nexport default {\r\n  ENVIRONMENT,\r\n  CONTACTS,\r\n};\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import {\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { AccountCircle } from \"@mui/icons-material\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\n\r\nimport FormText from \"../../src/components/FormText\";\r\nimport Button from \"../../src/components/Button\";\r\nimport Form from \"../../src/components/Form\";\r\nimport { useNavigate, useOutletContext } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nimport userService from \"../services/user\";\r\nimport { login } from \"../helper/helper\";\r\n\r\nconst SignUp = (props) => {\r\n  const navigate = useNavigate();\r\n  const {\r\n    userState: { setUser },\r\n  } = useOutletContext();\r\n  const [remember, setRemember] = useState(false);\r\n  const defaultHelperTextState = {\r\n    username: null,\r\n    password: null,\r\n    firstName: null,\r\n    lastName: null,\r\n    email: null,\r\n    confirm: null,\r\n  };\r\n  // Create a helper text state for each text-field to handle errors\r\n  const [helperTextObj, sethelperTextObj] = useState(defaultHelperTextState);\r\n\r\n  // Create state to help control password visibility\r\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\r\n  const [confirmPasswordVisibility, setConfirmPasswordVisibility] =\r\n    useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // For now, just login user\r\n    const data = new FormData(e.currentTarget);\r\n    const username = data.get(\"username\");\r\n    const password = data.get(\"password\");\r\n    const confirm = data.get(\"confirm\");\r\n    const email = data.get(\"email\");\r\n    const firstName = data.get(\"firstname\");\r\n    const lastName = data.get(\"lastname\");\r\n    const userObj = { password, email, username, lastName, firstName };\r\n\r\n    // Handle all erorrs regarding user input\r\n    let error = false;\r\n    Object.keys(userObj).forEach((userdetail) => {\r\n      // Handle if the textfield was left blank by user\r\n      if (!userObj[userdetail] || userObj[userdetail] === \"\") {\r\n        const string = userdetail.toLowerCase() + \" is required\";\r\n        sethelperTextObj({ ...defaultHelperTextState, [userdetail]: string });\r\n        error = true;\r\n        return;\r\n      }\r\n    });\r\n    if (error) return;\r\n\r\n    // Handle if passwords do not match\r\n    if (password !== confirm) {\r\n      const string = \"Passwords do not match\";\r\n      const newObj = { ...defaultHelperTextState, confirm: string };\r\n      sethelperTextObj(newObj);\r\n      return;\r\n    }\r\n\r\n    // Save user and log user in\r\n    try {\r\n      const newUser = await userService.create(userObj);\r\n\r\n      // Save userData to localStorage based on remember state variable\r\n      const credentials = {\r\n        username: newUser.username,\r\n        password: password,\r\n      };\r\n      const loginObj = await login(credentials, remember);\r\n      setUser(loginObj);\r\n    } catch (error) {\r\n      // Handle Error\r\n      const string = error.response.data.err || \"Username already exists\";\r\n      const newObj = { ...defaultHelperTextState, username: string };\r\n      sethelperTextObj(newObj);\r\n    }\r\n  };\r\n\r\n  const handleSignupRedirect = (e) => {\r\n    navigate(\"/chat/auth/signin\");\r\n  };\r\n  return (\r\n    <>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Sign up\r\n      </Typography>\r\n\r\n      <Box p={{ xs: 4, sm: 0 }} pt={{ sm: 2 }}>\r\n        <Form onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={{ xs: 3, sm: 3 }} columnSpacing={{ xs: 4 }}>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormText\r\n                id=\"firstname\"\r\n                name=\"firstname\"\r\n                label=\"First Name\"\r\n                autoComplete=\"firstname\"\r\n                autoFocus\r\n                helperText={helperTextObj.firstName}\r\n                error={Boolean(helperTextObj.firstName)}\r\n              >\r\n                <MoreHorizIcon />\r\n              </FormText>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <FormText\r\n                id=\"lastname\"\r\n                name=\"lastname\"\r\n                label=\"Last Name\"\r\n                autoComplete=\"lastname\"\r\n                helperText={helperTextObj.lastName}\r\n                error={Boolean(helperTextObj.lastName)}\r\n              >\r\n                <MoreHorizIcon />\r\n              </FormText>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormText\r\n                id=\"username\"\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                autoComplete=\"username\"\r\n                helperText={helperTextObj.username}\r\n                error={Boolean(helperTextObj.username)}\r\n              >\r\n                <AccountCircle />\r\n              </FormText>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormText\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                autoComplete=\"email\"\r\n                helperText={helperTextObj.email}\r\n                error={Boolean(helperTextObj.email)}\r\n              >\r\n                <EmailIcon />\r\n              </FormText>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"standard\"\r\n                required\r\n                fullWidth\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                autoComplete=\"current-password\"\r\n                type={passwordVisibility ? \"text\" : \"password\"}\r\n                helperText={helperTextObj.password}\r\n                error={Boolean(helperTextObj.password)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <LockIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          setPasswordVisibility(!passwordVisibility)\r\n                        }\r\n                      >\r\n                        {passwordVisibility ? (\r\n                          <VisibilityOff />\r\n                        ) : (\r\n                          <Visibility />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"standard\"\r\n                required\r\n                fullWidth\r\n                id=\"confirm\"\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                autoComplete=\"current-password\"\r\n                type={confirmPasswordVisibility ? \"text\" : \"password\"}\r\n                helperText={helperTextObj.confirm}\r\n                error={Boolean(helperTextObj.confirm)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <LockIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          setConfirmPasswordVisibility(\r\n                            !confirmPasswordVisibility\r\n                          )\r\n                        }\r\n                      >\r\n                        {confirmPasswordVisibility ? (\r\n                          <VisibilityOff />\r\n                        ) : (\r\n                          <Visibility />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  name=\"remember\"\r\n                  value={remember}\r\n                  checked={remember}\r\n                  onChange={() => {\r\n                    setRemember(!remember);\r\n                  }}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Remember Me\"\r\n              sx={{ mt: 2 }}\r\n            />\r\n          </Grid>\r\n          <Button type=\"submit\" fullWidth variant=\"contained\">\r\n            SIGN UP\r\n          </Button>\r\n\r\n          <Grid container sx={{ mb: 8 }} justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Link variant=\"body2\" onClick={handleSignupRedirect}>\r\n                {\"Already have an account?, sign in\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');\nexports.default = _default;"],"names":["StyledButton","props","MyButton","styled","MuiButton","theme","borderRadius","backgroundColor","color","variant","href","target","sx","disableElevation","children","type","fullWidth","mt","mb","component","onSubmit","noValidate","margin","required","helperText","error","id","label","name","autoComplete","autoFocus","InputProps","startAdornment","position","endAdornment","login","credentials","axios","res","data","remember","loginService","userObj","messageService","token","localStorage","setItem","JSON","stringify","user","Date","createSvgIcon","_jsx","d","navigate","useNavigate","setUser","useOutletContext","userState","useState","setRemember","defaultHelperTextState","username","password","firstName","lastName","email","confirm","helperTextObj","sethelperTextObj","passwordVisibility","setPasswordVisibility","confirmPasswordVisibility","setConfirmPasswordVisibility","handleSubmit","e","preventDefault","FormData","currentTarget","get","Object","keys","forEach","userdetail","string","toLowerCase","newObj","userService","newUser","loginObj","response","err","Typography","Box","p","xs","sm","pt","Form","Grid","container","spacing","columnSpacing","item","FormText","Boolean","MoreHoriz","AccountCircle","Email","TextField","InputAdornment","Lock","IconButton","onClick","VisibilityOff","Visibility","FormControlLabel","control","Checkbox","value","checked","onChange","Button","justifyContent","Link","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}