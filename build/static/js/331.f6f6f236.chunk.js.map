{"version":3,"file":"static/js/331.f6f6f236.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Send.js","../node_modules/@mui/icons-material/esm/SendTwoTone.js","../node_modules/@mui/icons-material/esm/SentimentSatisfiedAlt.js","../node_modules/@mui/material/esm/Stack/Stack.js","../node_modules/emoji-picker-react/src/DomUtils/classNames.ts","../node_modules/emoji-picker-react/src/DomUtils/focusElement.ts","../node_modules/emoji-picker-react/src/components/context/ElementRefContext.tsx","../node_modules/emoji-picker-react/src/types/exposedTypes.ts","../node_modules/emoji-picker-react/src/dataUtils/emojiSelectors.ts","../node_modules/emoji-picker-react/src/data/skinToneVariations.ts","../node_modules/emoji-picker-react/src/config/cdnUrls.ts","../node_modules/emoji-picker-react/src/config/categoryConfig.ts","../node_modules/emoji-picker-react/src/config/config.ts","../node_modules/emoji-picker-react/src/components/context/PickerConfigContext.tsx","../node_modules/emoji-picker-react/src/config/useConfig.ts","../node_modules/emoji-picker-react/src/DomUtils/isDarkTheme.ts","../node_modules/emoji-picker-react/src/dataUtils/alphaNumericEmojiIndex.ts","../node_modules/emoji-picker-react/src/hooks/useDebouncedState.ts","../node_modules/emoji-picker-react/src/hooks/useDisallowedEmojis.ts","../node_modules/emoji-picker-react/src/components/context/PickerContext.tsx","../node_modules/emoji-picker-react/src/hooks/useInitialLoad.ts","../node_modules/emoji-picker-react/src/hooks/useDisallowMouseMove.ts","../node_modules/emoji-picker-react/src/DomUtils/elementPositionInRow.ts","../node_modules/emoji-picker-react/src/DomUtils/selectors.ts","../node_modules/emoji-picker-react/src/dataUtils/parseNativeEmoji.ts","../node_modules/emoji-picker-react/src/dataUtils/suggested.ts","../node_modules/emoji-picker-react/src/hooks/useCloseAllOpenToggles.ts","../node_modules/emoji-picker-react/src/hooks/useSetVariationPicker.ts","../node_modules/emoji-picker-react/src/hooks/useMouseDownHandlers.ts","../node_modules/emoji-picker-react/src/DomUtils/scrollTo.ts","../node_modules/emoji-picker-react/src/hooks/useFocus.ts","../node_modules/emoji-picker-react/src/hooks/useFilter.ts","../node_modules/emoji-picker-react/src/hooks/useIsEmojiHidden.ts","../node_modules/emoji-picker-react/src/components/atoms/Button.tsx","../node_modules/emoji-picker-react/node_modules/style-inject/dist/style-inject.es.js","../node_modules/emoji-picker-react/src/components/emoji/Emoji.tsx","../node_modules/emoji-picker-react/src/components/body/EmojiCategory.tsx","../node_modules/emoji-picker-react/src/components/body/Suggested.tsx","../node_modules/emoji-picker-react/src/components/body/EmojiList.tsx","../node_modules/emoji-picker-react/src/DomUtils/keyboardNavigation.ts","../node_modules/emoji-picker-react/src/components/body/EmojiVariationPicker.tsx","../node_modules/emoji-picker-react/src/components/body/Body.tsx","../node_modules/emoji-picker-react/src/hooks/useOnScroll.ts","../node_modules/emoji-picker-react/src/hooks/useShouldShowSkinTonePicker.ts","../node_modules/emoji-picker-react/src/components/Layout/Flex.tsx","../node_modules/emoji-picker-react/src/components/Layout/Space.tsx","../node_modules/emoji-picker-react/src/components/Layout/Absolute.tsx","../node_modules/emoji-picker-react/src/components/Layout/Relative.tsx","../node_modules/emoji-picker-react/src/components/header/SkinTonePicker.tsx","../node_modules/emoji-picker-react/src/components/footer/Preview.tsx","../node_modules/emoji-picker-react/src/hooks/useEmojiPreviewEvents.ts","../node_modules/emoji-picker-react/src/DomUtils/categoryNameFromDom.ts","../node_modules/emoji-picker-react/src/hooks/useIsSearchMode.ts","../node_modules/emoji-picker-react/src/components/navigation/CategoryNavigation.tsx","../node_modules/emoji-picker-react/src/hooks/useScrollCategoryIntoView.ts","../node_modules/emoji-picker-react/src/hooks/useActiveCategoryScrollDetection.ts","../node_modules/emoji-picker-react/src/components/header/Search.tsx","../node_modules/emoji-picker-react/src/hooks/useKeyboardNavigation.ts","../node_modules/emoji-picker-react/src/components/header/Header.tsx","../node_modules/emoji-picker-react/src/DomUtils/getActiveElement.ts","../node_modules/emoji-picker-react/src/hooks/preloadEmoji.ts","../node_modules/emoji-picker-react/src/components/main/PickerMain.tsx","../node_modules/emoji-picker-react/src/hooks/useOnFocus.ts","../node_modules/emoji-picker-react/src/EmojiPickerReact.tsx","../node_modules/emoji-picker-react/src/components/ErrorBoundary.tsx","../node_modules/emoji-picker-react/src/index.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"m4 8.25 7.51 1-7.5-3.22zm.01 9.72 7.5-3.22-7.51 1z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2.01 3 2 10l15 2-15 2 .01 7L23 12 2.01 3zM4 8.25V6.03l7.51 3.22-7.51-1zm.01 9.72v-2.22l7.51-1-7.51 3.22z\"\n}, \"1\")], 'SendTwoTone');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"15.5\",\n  cy: \"9.5\",\n  r: \"1.5\"\n}, \"0\"), /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"8.5\",\n  cy: \"9.5\",\n  r: \"1.5\"\n}, \"1\"), /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"15.5\",\n  cy: \"9.5\",\n  r: \"1.5\"\n}, \"2\"), /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"8.5\",\n  cy: \"9.5\",\n  r: \"1.5\"\n}, \"3\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-2.5c2.33 0 4.32-1.45 5.12-3.5h-1.67c-.69 1.19-1.97 2-3.45 2s-2.75-.81-3.45-2H6.88c.8 2.05 2.79 3.5 5.12 3.5z\"\n}, \"4\")], 'SentimentSatisfiedAlt');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, mergeBreakpointsInOrder, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n  const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariatios = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n","import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n","import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n","export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  getImageUrl: (emojiStyle: EmojiStyle) => string;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n","import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { DataEmoji, DataEmojis } from './DataTypes';\n\nenum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a'\n}\n\nexport function emojiNames(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: DataEmoji): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n","import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n","import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n","import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n","import { GetEmojiUrl } from '../components/emoji/Emoji';\nimport { emojiUrlByUnified } from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    onEmojiClick: function defaultOnClickHandler(\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      emoji: EmojiClickData,\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      event: MouseEvent\n    ) {},\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: 'Search',\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n} & Omit<PickerConfigInternal, 'previewConfig'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n","import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  return (\n    <ConfigContext.Provider value={mergeConfig(config)}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n","import { isSystemDarkTheme } from '../DomUtils/isDarkTheme';\nimport { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport { PickerDimensions, PreviewConfig } from './config';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder } = usePickerConfig();\n  return searchPlaceHolder;\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { onEmojiClick } = usePickerConfig();\n  return onEmojiClick;\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  if (theme === Theme.AUTO) {\n    return isSystemDarkTheme() ? Theme.DARK : Theme.LIGHT;\n  }\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function usePickerSizeConfig(): {\n  height: PickerDimensions;\n  width: PickerDimensions;\n} {\n  const { height, width } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width) };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n","export function isSystemDarkTheme(): boolean {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  return !!window.matchMedia('(prefers-color-scheme: dark)').matches;\n}\n","import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    const joinedNameString = emojiNames(emoji)\n      .flat()\n      .join('')\n      .replace(/[^a-zA-Z\\d]/g, '')\n      .split('');\n\n    joinedNameString.forEach(char => {\n      searchIndex[char] = searchIndex[char] ?? {};\n\n      searchIndex[char][emojiUnified(emoji)] = emoji;\n    });\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n","import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n","import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified]);\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n","import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n","import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n","import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n","import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone,\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`,\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  return root\n    ? root.matches(asSelectors(ClassNames.scrollBody))\n      ? root\n      : root.querySelector(asSelectors(ClassNames.scrollBody))\n    : null;\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n","export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n","import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getsuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setsuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getsuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n","import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n","import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n","import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement,\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested,\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/Emoji';\nimport {\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig,\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified,\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setsuggested } from '../dataUtils/suggested';\nimport { EmojiClickData, EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setsuggested(emoji, skinToneToUse);\n      onEmojiClick(emojiClickOutput(emoji, skinToneToUse, getEmojiUrl), event);\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker,\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true,\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true,\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true,\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const unified = emojiUnified(emoji, activeSkinTone);\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    names: emojiNames(emoji),\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji),\n  };\n}\n","import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n","import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef,\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState,\n} from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef((current) =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue),\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some((name) => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return (unified) => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find((key) => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n","import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={clsx('epr-btn', props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  emojiHasVariations,\n  emojiName,\n  emojiNames,\n  emojiUrlByUnified,\n} from '../../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { Button } from '../atoms/Button';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\nimport './Emoji.css';\n\ntype ClickableEmojiProps = Readonly<\n  BaseProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\ntype BaseProps = {\n  emoji?: DataEmoji;\n  emojiStyle: EmojiStyle;\n  unified: string;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n};\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl,\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <Button\n      className={clsx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariatios]: hasVariations && showVariations,\n      })}\n      data-unified={unified}\n      // @ts-ignore - let's ignore the fact this is not a real react ref, ok?\n      aria-label={emojiName(emoji)}\n      data-full-name={emojiNames(emoji)}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </Button>\n  );\n}\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified,\n}: BaseProps) {\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n  if(!emojiToRender) {\n    return null\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          unified={unified}\n          style={style}\n          emoji={emojiToRender}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          getEmojiUrl={getEmojiUrl}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NativeEmoji({\n  unified,\n  style,\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={clsx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n\nfunction EmojiImg({\n  emoji,\n  unified,\n  emojiStyle,\n  style,\n  lazyLoad = false,\n  getEmojiUrl,\n}: {\n  emoji: DataEmoji;\n  unified: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  getEmojiUrl: GetEmojiUrl;\n}) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  return (\n    <img\n      src={getEmojiUrl(unified, emojiStyle)}\n      alt={emojiName(emoji)}\n      className={clsx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad((prev) => new Set(prev).add(unified));\n  }\n}\n\nexport type GetEmojiUrl = (unified: string, style: EmojiStyle) => string;\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={clsx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <div className={ClassNames.label}>{categoryName}</div>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n","import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getsuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getsuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nimport './EmojiList.css';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n\n  return (\n    <ul className={ClassNames.emojiList}>\n      {categories.map((categoryConfig, index) => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            index={index}\n            category={category}\n            categoryConfig={categoryConfig}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  index,\n  category,\n  categoryConfig\n}: {\n  index: number;\n  category: Categories;\n  categoryConfig: CategoryConfig;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && index > 1 ? [] : emojisByCategory(category);\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n","import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariatios);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={clsx(ClassNames.variationPicker, {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nimport './Body.css';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={ClassNames.scrollBody} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n","import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport './Flex.css';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={clsx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={clsx(className)} />;\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\nimport './SkinTonePicker.css';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={clsx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: clsx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={clsx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ViewOnlyEmoji } from '../emoji/Emoji';\nimport './Preview.css';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(previewEmoji?.originalUnified);\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji = variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji)\n    if (!defaultEmoji) {\n      return null\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">\n            {emojiName(emoji)}\n          </div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n","export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n","import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return (\n    <div className=\"epr-category-nav\" ref={CategoryNavigationRef}>\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n        return (\n          <Button\n            tabIndex={isSearchMode ? -1 : 0}\n            className={clsx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: category === activeCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n","import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { asSelectors, ClassNames } from '../../DomUtils/classNames';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport {\n  getNormalizedSearchTerm,\n  useClearSearch,\n  useFilter\n} from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-header-overlay\">\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={clsx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n\nconst CSS_SEARCH_SELECTOR = `${asSelectors(\n  ClassNames.emojiPicker\n)} ${asSelectors(ClassNames.emojiList)}`;\n\nfunction CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const searchQuery = `button[data-full-name*=\"${getNormalizedSearchTerm(\n    value\n  )}\"]`;\n\n  return (\n    <style>{`\n        ${CSS_SEARCH_SELECTOR} ${asSelectors(\n      ClassNames.category\n    )}:not(:has(${searchQuery})) {\n        display: none;\n      }\n\n        ${CSS_SEARCH_SELECTOR} button${asSelectors(\n      ClassNames.emoji\n    )}:not(${searchQuery}) {\n        display: none;\n      }\n  `}</style>\n  );\n}\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event)) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n","import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport './Header.css';\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n","import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n","import { GetEmojiUrl } from '../components/emoji/Emoji';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { usePickerSizeConfig, useThemeConfig } from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\nimport './PickerMain.css';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const { height, width } = usePickerSizeConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  const style = {\n    height,\n    width\n  };\n\n  return (\n    <aside\n      className={clsx(ClassNames.emojiPicker, 'epr-main', {\n        [ClassNames.searchActive]: searchModeActive,\n        'epr-dark-theme': theme === Theme.DARK\n      })}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n","import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\nimport { PickerConfig } from './config/config';\nimport './EmojiPickerReact.css';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n","import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ErrorBoundary>\n      <EmojiPickerReact {...props} />\n    </ErrorBoundary>\n  );\n}\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","_jsx","opacity","cx","cy","r","_excluded","joinChildren","children","separator","childrenArray","React","filter","Boolean","reduce","output","child","index","push","length","key","StackRoot","styled","name","slot","overridesResolver","props","styles","root","ownerState","theme","_extends","display","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","deepmerge","margin","row","column","getValue","mergeBreakpointsInOrder","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","component","divider","other","_objectWithoutPropertiesLoose","as","ClassNames","asSelectors","classNames","map","c","join","focusElement","element","requestAnimationFrame","focus","focusPrevElementSibling","previousElementSibling","focusNextElementSibling","nextElementSibling","focusFirstElementChild","firstElementChild","ElementRefContextProvider","PickerMainRef","AnchoredEmojiRef","BodyRef","SearchInputRef","SkinTonePickerRef","CategoryNavigationRef","VariationPickerRef","ElementRefContext","Provider","value","SuggestionMode","EmojiStyle","Theme","SkinTones","Categories","SkinTonePickerLocation","useElementRef","usePickerMainRef","useAnchoredEmojiRef","useSetAnchoredEmojiRef","target","current","useBodyRef","useSearchInputRef","useSkinTonePickerRef","useCategoryNavigationRef","EmojiProperties","skinToneVariations","NEUTRAL","LIGHT","MEDIUM_LIGHT","MEDIUM","MEDIUM_DARK","DARK","skinTonesNamed","entries","skinTonesMapped","mapped","skinTone","assign","emojiNames","emoji","emojiName","unifiedWithoutSkinTone","unified","splat","split","splice","emojiUnified","emojiHasVariations","emojiVariations","find","variation","includes","emojiVariationUnified","emojisByCategory","category","emojis","emojiUrlByUnified","emojiStyle","TWITTER","GOOGLE","FACEBOOK","APPLE","cdnUrl","variations","emojiByUnified","allEmojisByUnified","withoutSkinTone","allEmojis","flat","setTimeout","Emoji","categoriesOrdered","SUGGESTED","SMILEYS_PEOPLE","ANIMALS_NATURE","FOOD_DRINK","TRAVEL_PLACES","ACTIVITIES","OBJECTS","SYMBOLS","FLAGS","SuggestedRecent","configByCategory","baseCategoriesConfig","modifiers","categoryFromCategoryConfig","categoryNameFromCategoryConfig","getBaseConfigByCategory","modifier","mergeConfig","userConfig","basePickerConfig","previewConfig","config","categories","userCategoriesConfig","extra","suggestionMode","RECENT","_userCategoriesConfig","mergeCategoriesConfig","suggestedEmojisMode","skinTonePickerLocation","searchDisabled","PREVIEW","autoFocusSearch","defaultSkinTone","emojiVersion","getEmojiUrl","height","lazyLoadEmojis","onEmojiClick","event","basePreviewConfig","searchPlaceHolder","SEARCH","skinTonesDisabled","FREQUENT","width","defaultEmoji","defaultCaption","showPreview","ConfigContext","PickerConfigProvider","usePickerConfig","useEmojiStyleConfig","useCategoriesConfig","usePreviewConfig","useThemeConfig","AUTO","window","matchMedia","matches","useSkinTonePickerLocationConfig","useGetEmojiUrlConfig","getDimension","dimensionConfig","alphaNumericEmojiIndex","useDebouncedState","initialValue","delay","useState","state","setState","timer","useRef","Promise","resolve","clearTimeout","_window","useDisallowedEmojis","DisallowedEmojisRef","emojiVersionConfig","useMemo","parseFloat","Number","isNaN","disallowedEmojis","supportedLevel","added_in","addedIn","addedInNewerVersion","PickerContextProvider","dispatch","filterRef","disallowClickRef","disallowMouseRef","disallowedEmojisRef","suggestedUpdateState","Date","now","searchTerm","skinToneFanOpenState","activeSkinTone","activeCategoryState","emojisThatFailedToLoadState","Set","emojiVariationPickerState","isPastInitialLoad","setIsPastInitialLoad","useEffect","PickerContext","searchIndex","replace","char","useFilterRef","useDisallowMouseRef","useSearchTermState","useActiveSkinToneState","useEmojisThatFailedToLoadState","useEmojiVariationPickerState","useSkinToneFanOpenState","useUpdateSuggested","suggestedUpdated","setsuggestedUpdate","useAllowMouseMove","DisallowMouseRef","useIsMouseDisallowed","elementCountInRow","parent","parentWidth","getBoundingClientRect","elementWidth","Math","floor","elementIndexInRow","elementLeft","left","parentLeft","rowNumber","elementHeight","elementTop","top","parentTop","round","getRowElements","elements","elementsInRow","firstElementIndex","lastElementIndex","slice","getElementInRow","indexInRow","rowElements","getElementInNextRow","allElements","currentRow","nextRowElements","nextRow","getNextRowElements","EmojiButtonSelector","VisibleEmojiSelector","visible","hidden","buttonFromTarget","emojiElement","closest","emojiFromElement","originalUnified","originalUnifiedFromEmojiElement","unifiedFromEmojiElement","clientHeight","emojiTrueOffsetTop","button","closestCategory","labelHeight","categoryLabelHeight","elementOffsetTop","categoryWithoutLabel","querySelector","categoryContent","queryScrollBody","scrollBody","emojiDistanceFromScrollTop","closestScrollBody","_closestScrollBody","scrollTop","offsetTop","elementOffsetLeft","offsetLeft","dataset","elementDataSet","elementDataSetKey","isVisibleEmoji","classList","contains","isHidden","allVisibleEmojis","Array","from","querySelectorAll","lastVisibleEmoji","last","prevVisibleEmoji","nextVisibleEmoji","next","firstVisibleEmoji","nextCategory","prev","prevCategory","parentBottom","bottom","elementBottom","firstVisibleElementInContainer","closestCategoryContent","parseNativeEmoji","hex","String","fromCodePoint","parseInt","SUGGESTED_LS_KEY","getsuggested","mode","localStorage","recent","JSON","parse","_window2","getItem","sort","a","b","count","useCloseAllOpenToggles","variationPicker","setVariationPicker","skinToneFanOpen","setSkinToneFanOpen","useCallback","useHasOpenToggles","useSetVariationPicker","setAnchoredEmojiRef","setEmojiVariationPicker","useMouseDownHandlers","mouseDownTimerRef","closeAllOpenToggles","updateSuggested","onClick","emojiFromEvent","skinToneToUse","suspectedSkinTone","activeVariationFromUnified","nextList","existing","concat","i","original","min","setItem","stringify","setsuggested","getImageUrl","names","emojiClickOutput","onMouseDown","undefined","onMouseUp","bodyRef","addEventListener","passive","removeEventListener","parentElement","_element$parentElemen","isEmojiElement","scrollTo","$eprBody","scrollEmojiAboveLabel","isEmojiBehindLabel","by","scrollBy","useFocusSearchInput","useFocusCategoryNavigation","useClearSearch","applySearch","useApplySearch","focusSearchInput","useFilter","setFilterRef","setFilter","setter","useSetFilterRef","onChange","inputValue","nextValue","toLowerCase","longestMatch","keyword","dict","longestMatchingKey","findLongestMatch","filtered","hasMatch","filterEmojiObjectByKeyword","setSearchTerm","then","some","getNormalizedSearchTerm","str","trim","useIsEmojiHidden","emojisThatFailedToLoad","isEmojiFiltered","_filter$searchTerm","isEmojiFilteredBySearchTerm","useIsEmojiFiltered","failedToLoad","has","filteredOut","Button","type","className","clsx","styleInject","css","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ClickableEmoji","hiddenOnSearch","showVariations","size","lazyLoad","hasVariations","emojiHasVariatios","ViewOnlyEmoji","fontSize","emojiToRender","NATIVE","NativeEmoji","EmojiImg","external","setEmojisThatFailedToLoad","src","alt","loading","onError","add","EmojiCategory","categoryConfig","categoryName","label","Suggested","suggestedEmojisModeConfig","suggested","suggestedItem","EmojiList","emojiList","RenderCategory","isEmojiHidden","isEmojiDisallowed","useIsEmojiDisallowed","emojisToPush","hiddenCounter","isDisallowed","focusFirstVisibleEmoji","focusNextVisibleEmoji","focusPrevVisibleEmoji","focusVisibleEmojiOneRowUp","exitUp","countInRow","prevVisibleCategory","prevRowElements","getElementInPrevRow","visibleEmojiOneRowUp","focusVisibleEmojiOneRowDown","parentHeight","hasNextRow","nextVisibleCategory","visibleEmojiOneRowDown","Direction","EmojiVariationPicker","pointerStyle","Up","getMenuDirection","getTop","emojiOffsetTop","buttonHeight","Down","useVariationPickerTop","getPointerStyle","emojiTruOffsetLeft","clientWidth","usePointerStyle","Body","onScroll","useOnScroll","allowMouseMove","isMouseDisallowed","onMouseMove","useOnMouseMove","useIsSkinToneInSearch","useIsSkinToneInPreview","FlexDirection","Flex","ROW","Space","flex","Absolute","position","Relative","SkinTonePickerDirection","SkinTonePickerMenu","right","SkinTonePicker","VERTICAL","HORIZONTAL","isDisabled","isOpen","setIsOpen","setActiveSkinTone","fullWidth","expandedSize","ITEM_SIZE","vertical","open","flexBasis","skinToneVariation","active","transform","tabIndex","Preview","isSkinToneInPreview","PreviewBody","previewEmoji","setPreviewEmoji","variationPickerEmoji","allow","onEscape","onMouseOver","onEnter","onLeave","e","relatedTarget","useEmojiPreviewEvents","show","defaultText","categoryNameFromDom","$category","getAttribute","useIsSearchMode","CategoryNavigation","activeCategory","setActiveCategory","scrollCategoryIntoView","_BodyRef$current","useScrollCategoryIntoView","visibleCategories","Map","observer","IntersectionObserver","entry","id","set","intersectionRatio","ratios","lastCategory","threshold","el","observe","useActiveCategoryScrollDetection","isSearchMode","categoriesConfig","SearchContainer","isSkinToneInSearch","Search","inc","setInc","clearSearch","placeholder","autoFocus","input","CssSearch","onFocus","_event$target","KeyboardEvents","CSS_SEARCH_SELECTOR","emojiPicker","searchQuery","Header","getActiveElement","activeElement","useKeyboardNavigation","useScrollTo","hasOpenToggles","disallowMouseMove","useDisallowMouseMove","onKeyDown","Escape","preventDefault","usePickerMainKeyboardEvents","focusSkinTonePicker","useFocusSkinTonePicker","setSkinToneFanOpenState","goDownFromSearchInput","useGoDownFromSearchInput","ArrowRight","ArrowDown","Enter","firstEmoji","click","focusAndClickFirstVisibleEmoji","useSearchInputKeyboardEvents","onType","useOnType","ArrowLeft","focusNextSkinTone","focusPrevSkinTone","ArrowUp","useSkinTonePickerKeyboardEvents","useCategoryNavigationKeyboardEvents","goUpFromBody","focusCategoryNavigation","useGoUpFromBody","useBodyKeyboardEvents","exitLeft","currentSkinTone","appendSearch","useAppendSearch","metaKey","ctrlKey","altKey","hasModifier","match","preloadEmoji","preloadedEmojs","url","emojiUrl","Image","PickerMain","PickerRootElement","searchModeActive","usePickerSizeConfig","useOnFocus","searchActive","EmojiPicker","ErrorBoundary","_this","hasError","getDerivedStateFromError","componentDidCatch","error","errorInfo","console","render","this","EmojiPickerReact"],"sourceRoot":""}